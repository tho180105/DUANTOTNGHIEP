package store.com.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import store.com.DAO.CategoryDAO;
import store.com.Entity.Category;
import store.com.Service.CategoryService;



@Controller
public class IndexController {
	
	 
	@RequestMapping("home")
	public String home() {
		return "home/home";
	}
	
	@RequestMapping("/product")
	public String list() {
		return "product/list";
	}
	
	@RequestMapping("/detail")
	public String detail() {
		return "product/detail";
	}
	
	
	@RequestMapping("/faq")
	public String faq() {
		return "home/faq";
	}
	
	@RequestMapping("/contact")
	public String contact() {
		return "home/contact";
	}
	
	@RequestMapping("/blog")
	public String blog() {
		return "blog/blog";
	}
	
	@RequestMapping("/blogdetail")
	public String blogdetail() {
		return "blog/blog-detail";
	}
	@Autowired
	CategoryDAO categoryDAO;
	CategoryService categoryService;
	
	@RequestMapping("/category")
	@ResponseBody
	public List<Category> category(Model model) {
		Category category = new Category();
		model.addAttribute("form", category);
		List<Category> map = categoryDAO.findAll();
		model.addAttribute("items", map);
		return map;
	}
	
	@RequestMapping("/category/edit/{key}")
	@ResponseBody
	public Category edit(Model model, @PathVariable("key") Integer key) {
		model.addAttribute("key", key);
		Category category = categoryDAO.findById(key).get();
		model.addAttribute("form", category);
		List<Category> map = categoryDAO.findAll();
		model.addAttribute("items", map);
		return category;
	}
	
	@RequestMapping("/category/create")
	@ResponseBody
	public Category create(@RequestBody Category category) {
		categoryService.create(category);
		return category;
	}
}
